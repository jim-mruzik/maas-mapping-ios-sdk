<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PWMapView.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PWMapView</TokenIdentifier>
			<Abstract type="html">The PWMapClass displays a building structure in an MKMapKit environment.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
            
			
			<NodeRef refid="8"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setDelegate:</TokenIdentifier>
			<Abstract type="html">The receiver’s delegate.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;PWMapViewDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/delegate</TokenIdentifier>
			<Abstract type="html">The receiver’s delegate.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;PWMapViewDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/delegate</TokenIdentifier>
			<Abstract type="html">The receiver’s delegate.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;PWMapViewDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setMapViewLocationType:</TokenIdentifier>
			<Abstract type="html">The location provider currently used by the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWMapViewLocationType mapViewLocationType</Declaration>
			
			
			<Anchor>//api/name/mapViewLocationType</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/mapViewLocationType</TokenIdentifier>
			<Abstract type="html">The location provider currently used by the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWMapViewLocationType mapViewLocationType</Declaration>
			
			
			<Anchor>//api/name/mapViewLocationType</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/mapViewLocationType</TokenIdentifier>
			<Abstract type="html">The location provider currently used by the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWMapViewLocationType mapViewLocationType</Declaration>
			
			
			<Anchor>//api/name/mapViewLocationType</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setBuilding:</TokenIdentifier>
			<Abstract type="html">The building currently loaded into the Map View.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWBuilding *building</Declaration>
			
			
			<Anchor>//api/name/building</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/building</TokenIdentifier>
			<Abstract type="html">The building currently loaded into the Map View.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWBuilding *building</Declaration>
			
			
			<Anchor>//api/name/building</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/building</TokenIdentifier>
			<Abstract type="html">The building currently loaded into the Map View.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWBuilding *building</Declaration>
			
			
			<Anchor>//api/name/building</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCurrentFloor:</TokenIdentifier>
			<Abstract type="html">The floor currently displayed within the building.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWFloor *currentFloor</Declaration>
			
			
			<Anchor>//api/name/currentFloor</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/currentFloor</TokenIdentifier>
			<Abstract type="html">The floor currently displayed within the building.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWFloor *currentFloor</Declaration>
			
			
			<Anchor>//api/name/currentFloor</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/currentFloor</TokenIdentifier>
			<Abstract type="html">The floor currently displayed within the building.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWFloor *currentFloor</Declaration>
			
			
			<Anchor>//api/name/currentFloor</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setUserTrackingBarButtonItem:</TokenIdentifier>
			<Abstract type="html">A property to access the map view user tracking bar button.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) UIBarButtonItem *userTrackingBarButtonItem</Declaration>
			
			
			<Anchor>//api/name/userTrackingBarButtonItem</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/userTrackingBarButtonItem</TokenIdentifier>
			<Abstract type="html">A property to access the map view user tracking bar button.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) UIBarButtonItem *userTrackingBarButtonItem</Declaration>
			
			
			<Anchor>//api/name/userTrackingBarButtonItem</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/userTrackingBarButtonItem</TokenIdentifier>
			<Abstract type="html">A property to access the map view user tracking bar button.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) UIBarButtonItem *userTrackingBarButtonItem</Declaration>
			
			
			<Anchor>//api/name/userTrackingBarButtonItem</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCustomLocation:</TokenIdentifier>
			<Abstract type="html">A reference to the current custom location after the map view has been asked to navigate to a custom location (Current user position or a dropped pin).</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWCustomLocation *customLocation</Declaration>
			
			
			<Anchor>//api/name/customLocation</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/customLocation</TokenIdentifier>
			<Abstract type="html">A reference to the current custom location after the map view has been asked to navigate to a custom location (Current user position or a dropped pin).</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWCustomLocation *customLocation</Declaration>
			
			
			<Anchor>//api/name/customLocation</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/customLocation</TokenIdentifier>
			<Abstract type="html">A reference to the current custom location after the map view has been asked to navigate to a custom location (Current user position or a dropped pin).</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWCustomLocation *customLocation</Declaration>
			
			
			<Anchor>//api/name/customLocation</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setUserLocation:</TokenIdentifier>
			<Abstract type="html">A reference to the user&apos;s current location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) PWCustomLocation *userLocation</Declaration>
			
			
			<Anchor>//api/name/userLocation</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/userLocation</TokenIdentifier>
			<Abstract type="html">A reference to the user&apos;s current location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) PWCustomLocation *userLocation</Declaration>
			
			
			<Anchor>//api/name/userLocation</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/userLocation</TokenIdentifier>
			<Abstract type="html">A reference to the user&apos;s current location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) PWCustomLocation *userLocation</Declaration>
			
			
			<Anchor>//api/name/userLocation</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCurrentLocationProviderType:</TokenIdentifier>
			<Abstract type="html">The current type of location provider for the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWMapViewLocationType currentLocationProviderType</Declaration>
			
			
			<Anchor>//api/name/currentLocationProviderType</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/currentLocationProviderType</TokenIdentifier>
			<Abstract type="html">The current type of location provider for the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWMapViewLocationType currentLocationProviderType</Declaration>
			
			
			<Anchor>//api/name/currentLocationProviderType</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/currentLocationProviderType</TokenIdentifier>
			<Abstract type="html">The current type of location provider for the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWMapViewLocationType currentLocationProviderType</Declaration>
			
			
			<Anchor>//api/name/currentLocationProviderType</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setMapType:</TokenIdentifier>
			<Abstract type="html">The type of data displayed by the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) MKMapType mapType</Declaration>
			
			
			<Anchor>//api/name/mapType</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/mapType</TokenIdentifier>
			<Abstract type="html">The type of data displayed by the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) MKMapType mapType</Declaration>
			
			
			<Anchor>//api/name/mapType</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/mapType</TokenIdentifier>
			<Abstract type="html">The type of data displayed by the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) MKMapType mapType</Declaration>
			
			
			<Anchor>//api/name/mapType</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCenterCoordinate:</TokenIdentifier>
			<Abstract type="html">The latitude and longitude of the center of the map view&apos;s display.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CLLocationCoordinate2D centerCoordinate</Declaration>
			
			
			<Anchor>//api/name/centerCoordinate</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/centerCoordinate</TokenIdentifier>
			<Abstract type="html">The latitude and longitude of the center of the map view&apos;s display.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CLLocationCoordinate2D centerCoordinate</Declaration>
			
			
			<Anchor>//api/name/centerCoordinate</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/centerCoordinate</TokenIdentifier>
			<Abstract type="html">The latitude and longitude of the center of the map view&apos;s display.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CLLocationCoordinate2D centerCoordinate</Declaration>
			
			
			<Anchor>//api/name/centerCoordinate</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setRouteSnappingTolerance:</TokenIdentifier>
			<Abstract type="html">The route snapping tolerance value.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRouteSnapTolerance routeSnappingTolerance</Declaration>
			
			
			<Anchor>//api/name/routeSnappingTolerance</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/routeSnappingTolerance</TokenIdentifier>
			<Abstract type="html">The route snapping tolerance value.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRouteSnapTolerance routeSnappingTolerance</Declaration>
			
			
			<Anchor>//api/name/routeSnappingTolerance</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/routeSnappingTolerance</TokenIdentifier>
			<Abstract type="html">The route snapping tolerance value.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRouteSnapTolerance routeSnappingTolerance</Declaration>
			
			
			<Anchor>//api/name/routeSnappingTolerance</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCurrentRoute:</TokenIdentifier>
			<Abstract type="html">The map view&apos;s current route if any.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRoute *currentRoute</Declaration>
			
			
			<Anchor>//api/name/currentRoute</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/currentRoute</TokenIdentifier>
			<Abstract type="html">The map view&apos;s current route if any.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRoute *currentRoute</Declaration>
			
			
			<Anchor>//api/name/currentRoute</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/currentRoute</TokenIdentifier>
			<Abstract type="html">The map view&apos;s current route if any.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRoute *currentRoute</Declaration>
			
			
			<Anchor>//api/name/currentRoute</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCurrentRouteInstruction:</TokenIdentifier>
			<Abstract type="html">The map view&apos;s current route instruction if any.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRouteInstruction *currentRouteInstruction</Declaration>
			
			
			<Anchor>//api/name/currentRouteInstruction</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/currentRouteInstruction</TokenIdentifier>
			<Abstract type="html">The map view&apos;s current route instruction if any.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRouteInstruction *currentRouteInstruction</Declaration>
			
			
			<Anchor>//api/name/currentRouteInstruction</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/currentRouteInstruction</TokenIdentifier>
			<Abstract type="html">The map view&apos;s current route instruction if any.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRouteInstruction *currentRouteInstruction</Declaration>
			
			
			<Anchor>//api/name/currentRouteInstruction</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setTrackingMode:</TokenIdentifier>
			<Abstract type="html">The tracking mode of the map. Any mode besides PWTrackingModeNone automatically controls the map camera.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWTrackingMode trackingMode</Declaration>
			
			
			<Anchor>//api/name/trackingMode</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/trackingMode</TokenIdentifier>
			<Abstract type="html">The tracking mode of the map. Any mode besides PWTrackingModeNone automatically controls the map camera.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWTrackingMode trackingMode</Declaration>
			
			
			<Anchor>//api/name/trackingMode</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/trackingMode</TokenIdentifier>
			<Abstract type="html">The tracking mode of the map. Any mode besides PWTrackingModeNone automatically controls the map camera.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWTrackingMode trackingMode</Declaration>
			
			
			<Anchor>//api/name/trackingMode</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCamera:</TokenIdentifier>
			<Abstract type="html">The camera used for determining the appearance of the map.  A camera object defines a point above the map’s surface from which to view the map.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) MKMapCamera *camera</Declaration>
			
			
			<Anchor>//api/name/camera</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/camera</TokenIdentifier>
			<Abstract type="html">The camera used for determining the appearance of the map.  A camera object defines a point above the map’s surface from which to view the map.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) MKMapCamera *camera</Declaration>
			
			
			<Anchor>//api/name/camera</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/camera</TokenIdentifier>
			<Abstract type="html">The camera used for determining the appearance of the map.  A camera object defines a point above the map’s surface from which to view the map.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) MKMapCamera *camera</Declaration>
			
			
			<Anchor>//api/name/camera</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setRegion:</TokenIdentifier>
			<Abstract type="html">The area currently displayed by the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) MKCoordinateRegion region</Declaration>
			
			
			<Anchor>//api/name/region</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/region</TokenIdentifier>
			<Abstract type="html">The area currently displayed by the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) MKCoordinateRegion region</Declaration>
			
			
			<Anchor>//api/name/region</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/region</TokenIdentifier>
			<Abstract type="html">The area currently displayed by the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) MKCoordinateRegion region</Declaration>
			
			
			<Anchor>//api/name/region</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setVisibleMapRect:</TokenIdentifier>
			<Abstract type="html">*  The area currently displayed by the map view.  This property represents the same basic information as the region property but specified as a map rectangle instead of a region.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) MKMapRect visibleMapRect</Declaration>
			
			
			<Anchor>//api/name/visibleMapRect</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/visibleMapRect</TokenIdentifier>
			<Abstract type="html">*  The area currently displayed by the map view.  This property represents the same basic information as the region property but specified as a map rectangle instead of a region.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) MKMapRect visibleMapRect</Declaration>
			
			
			<Anchor>//api/name/visibleMapRect</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/visibleMapRect</TokenIdentifier>
			<Abstract type="html">*  The area currently displayed by the map view.  This property represents the same basic information as the region property but specified as a map rectangle instead of a region.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) MKMapRect visibleMapRect</Declaration>
			
			
			<Anchor>//api/name/visibleMapRect</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setZoomLevel:</TokenIdentifier>
			<Abstract type="html">The resolution of current map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSInteger zoomLevel</Declaration>
			
			
			<Anchor>//api/name/zoomLevel</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/zoomLevel</TokenIdentifier>
			<Abstract type="html">The resolution of current map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSInteger zoomLevel</Declaration>
			
			
			<Anchor>//api/name/zoomLevel</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/zoomLevel</TokenIdentifier>
			<Abstract type="html">The resolution of current map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSInteger zoomLevel</Declaration>
			
			
			<Anchor>//api/name/zoomLevel</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setMapViewLocationType:configuration:</TokenIdentifier>
			<Abstract type="html">Sets the location provider to be used by the map.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setMapViewLocationType:(PWMapViewLocationType)mapViewLocationType configuration:(NSDictionary *)configuration</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapViewLocationType</Name>
					<Abstract type="html">The location provider to use. See PWMapViewLocationType for a list of supported location providers.</Abstract>
				</Parameter><Parameter>
					<Name>configuration</Name>
					<Abstract type="html">NSDictionary of configuration key/values. Each Location Type defines its own expected values.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setMapViewLocationType:configuration:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setBuilding:</TokenIdentifier>
			<Abstract type="html">Sets the building object to be used by the map.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setBuilding:(PWBuilding *)building</Declaration>
			<Parameters>
				<Parameter>
					<Name>building</Name>
					<Abstract type="html">The valid building object to display.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBuilding:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setFloor:</TokenIdentifier>
			<Abstract type="html">Sets the current floor of the building that should be displayed on the map.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setFloor:(PWFloor *)floor</Declaration>
			<Parameters>
				<Parameter>
					<Name>floor</Name>
					<Abstract type="html">The floor object to display</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setFloor:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/navigateToCustomLocation:</TokenIdentifier>
			<Abstract type="html">Repositions the map&apos;s view to a custom location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)navigateToCustomLocation:(PWCustomLocation *)location</Declaration>
			<Parameters>
				<Parameter>
					<Name>location</Name>
					<Abstract type="html">A custom location reference where the map should navigate to.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/navigateToCustomLocation:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/navigateToPointOfInterest:</TokenIdentifier>
			<Abstract type="html">Repositions the map&apos;s view to an specific point of interest.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)navigateToPointOfInterest:(PWPointOfInterest *)poi</Declaration>
			<Parameters>
				<Parameter>
					<Name>poi</Name>
					<Abstract type="html">A point of interest reference where the map should navigate to.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/navigateToPointOfInterest:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/showPointsOfInterest:</TokenIdentifier>
			<Abstract type="html">Displays the array of Points of Interest, causing the map view to zoom in/out to contain all of the points of interest.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)showPointsOfInterest:(NSArray *)pois</Declaration>
			<Parameters>
				<Parameter>
					<Name>pois</Name>
					<Abstract type="html">An array of PWPointOfInterest objects that should be displayed on the map.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/showPointsOfInterest:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/selectPointOfInterest:animated:</TokenIdentifier>
			<Abstract type="html">Selects a PointOfInterest on the map.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)selectPointOfInterest:(PWPointOfInterest *)poi animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>poi</Name>
					<Abstract type="html">A PointOfInterest to select on the map.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">A BOOL property to determine whether the change of map&apos;s region should be animated or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/selectPointOfInterest:animated:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/deselectPointOfInterest:animated:</TokenIdentifier>
			<Abstract type="html">Deselects a PointOfInterest on the map.  If the POI is not selected, this method does nothing</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)deselectPointOfInterest:(PWPointOfInterest *)poi animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>poi</Name>
					<Abstract type="html">A PointOfInterest to deselect on the map.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">A BOOL property to determine whether the change of map&apos;s region should be animated or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deselectPointOfInterest:animated:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/viewForPointOfInterest:</TokenIdentifier>
			<Abstract type="html">Returns the annotation view of a PointOfInterest.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (PWBuildingAnnotationView *)viewForPointOfInterest:(PWPointOfInterest *)poi</Declaration>
			<Parameters>
				<Parameter>
					<Name>poi</Name>
					<Abstract type="html">The Point of Interest. This parameter must not be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/viewForPointOfInterest:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/navigateWithRoute:</TokenIdentifier>
			<Abstract type="html">Repositions the map view to display the given route.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)navigateWithRoute:(PWRoute *)route</Declaration>
			<Parameters>
				<Parameter>
					<Name>route</Name>
					<Abstract type="html">The route object that will be used to navigate within the map.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/navigateWithRoute:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setRouteManeuver:</TokenIdentifier>
			<Abstract type="html">Sets and dislays the current navitation instruction/steps during a navigation.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setRouteManeuver:(PWRouteInstruction *)instruction</Declaration>
			<Parameters>
				<Parameter>
					<Name>instruction</Name>
					<Abstract type="html">A route instruction object for the route.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setRouteManeuver:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/cancelRouting</TokenIdentifier>
			<Abstract type="html">Stops the current routing task.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)cancelRouting</Declaration>
			
			
			<Anchor>//api/name/cancelRouting</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCenterCoordinate:zoomLevel:animated:</TokenIdentifier>
			<Abstract type="html">Positions the map to the supplied center coordinate with the given zoom level and optional animation.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setCenterCoordinate:(CLLocationCoordinate2D)centerCoordinate zoomLevel:(NSUInteger)zoomLevel animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>centerCoordinate</Name>
					<Abstract type="html">A CLLocationCoordinate2D object representing the latitude an longitude the map should zoom to.</Abstract>
				</Parameter><Parameter>
					<Name>zoomLevel</Name>
					<Abstract type="html">A NSUInteger value representing zoom level the map should zoom to.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">A BOOL property to determine whether the change of map&apos;s center should be animated or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCenterCoordinate:zoomLevel:animated:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCenterCoordinate:animated:</TokenIdentifier>
			<Abstract type="html">Positions the map to the supplied center coordinate with the optional animation.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setCenterCoordinate:(CLLocationCoordinate2D)centerCoordinate animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>centerCoordinate</Name>
					<Abstract type="html">A CLLocationCoordinate2D object representing the latitude an longitude the map should zoom to.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">A BOOL property to determine whether the change of map&apos;s center should be animated or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCenterCoordinate:animated:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setRegion:animated:</TokenIdentifier>
			<Abstract type="html">Positions the map to the supplied MKCoordinateRegion with optional animation.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setRegion:(MKCoordinateRegion)region animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>region</Name>
					<Abstract type="html">A MKCoordinateRegion object representing the coordinate and span the map should display.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">A BOOL property to determine whether the change of map&apos;s region should be animated or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setRegion:animated:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setVisibleMapRect:animated:</TokenIdentifier>
			<Abstract type="html">Changes the currently visible portion of the map and optionally animates the change.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setVisibleMapRect:(MKMapRect)visibleMapRect animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>visibleMapRect</Name>
					<Abstract type="html">The map rectangle to make visible in the map view.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">A BOOL property to determine whether the change of map&apos;s region should be animated or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setVisibleMapRect:animated:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/startUpdatingHeading</TokenIdentifier>
			<Abstract type="html">Starts heading updates that may be received from the PWMapViewDelegate.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)startUpdatingHeading</Declaration>
			
			
			<Anchor>//api/name/startUpdatingHeading</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/stopUpdatingHeading</TokenIdentifier>
			<Abstract type="html">Stops heading updates. Causes didUpdateHeading in PWMapViewDelegate to stop firing.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)stopUpdatingHeading</Declaration>
			
			
			<Anchor>//api/name/stopUpdatingHeading</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCamera:animated:</TokenIdentifier>
			<Abstract type="html">Changes the camera used for determining the map’s viewing parameters and optionally animates the change.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setCamera:(MKMapCamera *)camera animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>camera</Name>
					<Abstract type="html">The camera object containing the viewing angle information. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">A BOOL property to determine whether the change of map&apos;s region should be animated or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCamera:animated:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/registerLocationManager:</TokenIdentifier>
			<Abstract type="html">Register an location manager provider with the map view. This location provider is used when modifying the indoorUserTrackingMode or when showsIndoorUserLocation is set to YES.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)registerLocationManager:(id&lt;PWLocationManager&gt;)locationManager</Declaration>
			<Parameters>
				<Parameter>
					<Name>locationManager</Name>
					<Abstract type="html">The location manager to register with the map view. The location manager must conform to the PWLocationManager protocol.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerLocationManager:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/unregisterLocationManager</TokenIdentifier>
			<Abstract type="html">Unregister any location manager provider that is registered with the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)unregisterLocationManager</Declaration>
			
			
			<Anchor>//api/name/unregisterLocationManager</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/addAnnotation:</TokenIdentifier>
			<Abstract type="html">Adds the specified annotation to the PWMapView.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)addAnnotation:(id&lt;MKAnnotation&gt;)annotation</Declaration>
			<Parameters>
				<Parameter>
					<Name>annotation</Name>
					<Abstract type="html">The annotation object to add to the receiver. This object must conform to the MKAnnotation protocol.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addAnnotation:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/addAnnotations:</TokenIdentifier>
			<Abstract type="html">Adds an array of annotation objects to the PWMapView.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)addAnnotations:(NSArray&lt;id&lt;MKAnnotation&gt; &gt; *)annotations</Declaration>
			<Parameters>
				<Parameter>
					<Name>annotations</Name>
					<Abstract type="html">An array of annotation objects. Each object in the array must conform to the MKAnnotation protocol.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addAnnotations:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/removeAnnotation:</TokenIdentifier>
			<Abstract type="html">Removes the specified annotation object from the PWMapView.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)removeAnnotation:(id&lt;MKAnnotation&gt;)annotation</Declaration>
			<Parameters>
				<Parameter>
					<Name>annotation</Name>
					<Abstract type="html">The annotation object to remove. This object must conform to the MKAnnotation protocol.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeAnnotation:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/removeAnnotations:</TokenIdentifier>
			<Abstract type="html">Removes an array of annotation objects from the PWMapView.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)removeAnnotations:(NSArray&lt;id&lt;MKAnnotation&gt; &gt; *)annotations</Declaration>
			<Parameters>
				<Parameter>
					<Name>annotations</Name>
					<Abstract type="html">The array of annotations to remove. Objects in the array must conform to the MKAnnotation protocol.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeAnnotations:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/addOverlay:</TokenIdentifier>
			<Abstract type="html">Adds a single overlay object to the PWMapView.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)addOverlay:(id&lt;MKOverlay&gt;)overlay</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlay</Name>
					<Abstract type="html">The overlay object to add. This object must conform to the MKOverlay protocol.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addOverlay:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/addOverlays:</TokenIdentifier>
			<Abstract type="html">Adds an array of overlay objects to the PWMapView.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)addOverlays:(NSArray&lt;id&lt;MKOverlay&gt; &gt; *)overlays</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlays</Name>
					<Abstract type="html">An array of objects, each of which must conform to the MKOverlay protocol.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addOverlays:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/insertOverlay:atIndex:</TokenIdentifier>
			<Abstract type="html">Inserts an overlay object into the list associated with the PWMapView.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)insertOverlay:(id&lt;MKOverlay&gt;)overlay atIndex:(NSUInteger)index</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlay</Name>
					<Abstract type="html">The overlay object to insert.</Abstract>
				</Parameter><Parameter>
					<Name>index</Name>
					<Abstract type="html">The index at which to insert the overlay object.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/insertOverlay:atIndex:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/exchangeOverlayAtIndex:withOverlayAtIndex:</TokenIdentifier>
			<Abstract type="html">Exchanges the position of two overlay objects.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)exchangeOverlayAtIndex:(NSUInteger)index1 withOverlayAtIndex:(NSUInteger)index2</Declaration>
			<Parameters>
				<Parameter>
					<Name>index1</Name>
					<Abstract type="html">The index of an overlay in the MKOverlayLevelAboveLabels map level.</Abstract>
				</Parameter><Parameter>
					<Name>index2</Name>
					<Abstract type="html">The index of another overlay in the MKOverlayLevelAboveLabels map level.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/exchangeOverlayAtIndex:withOverlayAtIndex:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/removeOverlay:</TokenIdentifier>
			<Abstract type="html">Removes a single overlay object from the PWMapView.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)removeOverlay:(id&lt;MKOverlay&gt;)overlay</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlay</Name>
					<Abstract type="html">The overlay object to remove.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeOverlay:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/removeOverlays:</TokenIdentifier>
			<Abstract type="html">Removes one or more overlay objects from the PWMapView.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)removeOverlays:(NSArray&lt;id&lt;MKOverlay&gt; &gt; *)overlays</Declaration>
			<Parameters>
				<Parameter>
					<Name>overlays</Name>
					<Abstract type="html">An array of objects, each of which conforms to the MKOverlay protocol.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeOverlays:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
        
        
	</File>
</Tokens>